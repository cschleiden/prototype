{"version":3,"sources":["Components/FilterInput.tsx","Components/HoverlayButton.tsx","Components/Label.tsx","Components/HoverlayLabel.tsx","Components/Popover.tsx","Fields/allowedValues.tsx","Fields/IdentityPickerData.ts","Fields/identity.tsx","Fields/integer.tsx","Fields/longText.tsx","Components/State.tsx","Fields/state.tsx","Labels/LabelData.ts","Labels/LabelPicker.tsx","Fields/tags.tsx","Fields/textField.tsx","Fields/toggle.tsx","Components/IssueIcon.tsx","Components/Header/WorkItemId.tsx","Components/Header.tsx","Components/Divider.tsx","Components/Identity.tsx","Components/Timeline/Timeline.tsx","Components/ActivityFeed/ActivityFeed.tsx","index.tsx"],"names":["FilterInput","props","react","className","TextField","autoFocus","excludeTabStop","prefixIconProps","iconName","value","filter","onChange","_","setFilter","HoverlayButton","ref","anchorRef","Button","onClick","children","Label","css","HoverlayLabel","PopoverContent","dropdown","React","current","expand","Card","contentProps","contentPadding","hideHeader","HoverlayLabel_HoverlayLabel","label","hideClose","onDismiss","subtle","iconProps","additionalHeaderContent","content","Popover","Callout","blurDismiss","undefined","escDismiss","lightDismiss","anchorElement","anchorOrigin","horizontal","vertical","Popover_PopoverContent","Object","assign","id","items","text","StateValue","allowedValues","_React$useState","_React$useState2","slicedToArray","_React$useState3","_React$useState4","selectedIdx","setSelectedIdx","_React$useState5","_React$useState6","isOpen","setIsOpen","buttonRef","HoverlayButton_HoverlayButton","Label_Label","allowedValues_StateValue","Popover_Popover","onSelect","idx","FilterInput_FilterInput","ListBox","x","toLocaleLowerCase","indexOf","renderItem","rowIdx","colIdx","column","item","Table","columnIndex","tableColumn","key","Icon","selection","ListSelection","selectedRanges","beginIndex","endIndex","IdentityPickerProviderExample","_this","this","classCallCheck","currentPersonas","bosses","displayName","entityId","entityType","mail","originDirectory","originId","personas","getSampleEntity","allEmployees","concat","getEntityFromUniqueAttribute","onRequestConnectionInformation","entity","getDirectReports","directReports","managers","createClass","selectedItems","getPersonaList","physicalDeliveryOfficeName","telephoneNumber","_this2","length","filterList","Promise","resolve","reject","setTimeout","toLowerCase","Fields_identity","pickerProvider","selectedIdentities","ObservableArray","input","document","querySelector","focus","identity_StateValue","IdentityPicker","onIdentitiesRemoved","identities","onIdentityAdded","identity","push","onIdentityRemoved","integer","setValue","tempValue","setTempValue","close","integer_StateValue","inputType","disabled","primary","longText","editable","setEditable","headerDescriptionProps","headerCommandBarItems","important","onActivate","dangerouslySetInnerHTML","__html","multiline","autoAdjustHeight","StateIcon","state","Status","Statuses","Queued","size","Waiting","Success","style","marginLeft","State","State_StateIcon","state_StateValue","State_State","getSuggestions","context","color","blue","green","red","labelProps","EditableLabelGroupFreeFlow","_React$Component","_getPrototypeOf2","_len","arguments","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","onLabelSubmit","model","onLabelRemove","removeAll","toUpperCase","inherits","azure_devops_ui_Label","wrappingBehavior","getSuggestedLabels","tags","LabelPicker_EditableLabelGroupFreeFlow","textField","textField_StateValue","toggle","toggleValue","ObservableValue","Toggle","offText","onText","checked","event","preventDefault","IssueIcon","_ref","typeName","width","height","src","alt","WorkItemId","workItemId","workItemType","IssueIcon_IssueIcon","WorkItemHeader","title","WorkItemId_WorkItemId","Divider","Identity","image","name","imageUrl","determineImage","Persona","Timeline","TimelineSmallIcon","TimelineEntry","renderIcon","Ago","format","date","Date","TimelineShowMore","ActivityFeedEntryCreation","Timeline_TimelineEntry","Timeline_TimelineSmallIcon","Identity_Identity","ActivityFeedAssignedTo","ActivityFeed","Timeline_Timeline_Timeline","ActivityFeed_ActivityFeedEntryCreation","Timeline_TimelineShowMore","ActivityFeed_ActivityFeedAssignedTo","Content","react_default","a","createElement","Surface","Provider","background","Header_WorkItemHeader","Divider_Divider","ActivityFeed_ActivityFeed","FocusGroup","ReactDOM","render","src_Content","getElementById"],"mappings":"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","file":"static/js/main.43b4e57d.chunk.js","sourcesContent":["import * as React from \"react\";\r\nimport { TextField } from \"azure-devops-ui/TextField\";\r\n\r\nexport const FilterInput: React.FC<{\r\n  setFilter: (value: string) => void;\r\n  filter: string;\r\n}> = props => {\r\n  return (\r\n    <div className=\"filter-input-container\">\r\n      <TextField\r\n        autoFocus={true}\r\n        className=\"filter-input\"\r\n        excludeTabStop={true}\r\n        prefixIconProps={{ iconName: \"Search\" }}\r\n        value={props.filter}\r\n        onChange={(_, value) => props.setFilter(value)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import * as React from \"react\";\r\nimport { Button } from \"azure-devops-ui/Button\";\r\nimport \"./HoverlayButton.scss\";\r\n\r\nexport const HoverlayButton: React.FC<{\r\n  anchorRef?: any;\r\n  onClick?: () => void;\r\n}> = props => {\r\n  return (\r\n    <div className=\"field-wrapper\" ref={props.anchorRef}>\r\n      <Button className=\"field\" onClick={props.onClick}>\r\n        <div className=\"flex-column flex-grow flex-start justify-start\">\r\n          {props.children}\r\n        </div>\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n","import * as React from \"react\";\r\nimport { css } from \"azure-devops-ui/Util\";\r\n\r\nexport const Label: React.FC<{ className?: string }> = props => {\r\n  return (\r\n    <div className={css(\"label body-s\", props.className)}>{props.children}</div>\r\n  );\r\n};\r\n","import * as React from \"react\";\r\nimport { css } from \"azure-devops-ui/Util\";\r\n\r\nexport const HoverlayLabel: React.FC<{ className?: string }> = props => {\r\n  return (\r\n    <div\r\n      className={css(\r\n        \"hoverlay-label flex-grow body-m font-weight-semibold\",\r\n        props.className\r\n      )}\r\n    >\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n","import { Button } from \"azure-devops-ui/Button\";\r\nimport { Callout } from \"azure-devops-ui/Callout\";\r\nimport { Card } from \"azure-devops-ui/Card\";\r\nimport { IExpandable } from \"azure-devops-ui/Expandable\";\r\nimport * as React from \"react\";\r\nimport { HoverlayLabel } from \"./HoverlayLabel\";\r\n\r\nconst PopoverContent: React.FC<{\r\n  onDismiss: Function;\r\n  onSelect: (idx: number) => void;\r\n  selectedIdx: number;\r\n  hideClose?: boolean;\r\n  hideHeader?: boolean;\r\n  label: string;\r\n  additionalHeaderContent?: JSX.Element;\r\n  content: JSX.Element;\r\n}> = props => {\r\n  const dropdown = React.useRef<IExpandable>();\r\n\r\n  React.useEffect(() => {\r\n    dropdown && dropdown.current && dropdown.current.expand();\r\n  });\r\n\r\n  return (\r\n    <Card\r\n      className=\"popover-card bolt-card-no-vertical-padding\"\r\n      contentProps={{\r\n        contentPadding: false\r\n      }}\r\n    >\r\n      <div className=\"popover flex-column flex-grow\">\r\n        {!props.hideHeader && (\r\n          <div className=\"popover-top flex-column\">\r\n            <div className=\"popover-header flex-center flex-row\">\r\n              <HoverlayLabel>{props.label}</HoverlayLabel>\r\n              {!props.hideClose && (\r\n                <Button\r\n                  className=\"hoverlay-close\"\r\n                  onClick={() => props.onDismiss()}\r\n                  subtle={true}\r\n                  iconProps={{\r\n                    iconName: \"ChromeClose\",\r\n                    className: \"hoverlay-close-icon\"\r\n                  }}\r\n                />\r\n              )}\r\n            </div>\r\n            {props.additionalHeaderContent}\r\n          </div>\r\n        )}\r\n\r\n        {props.content}\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport const Popover: React.FC<any> = props => {\r\n  return (\r\n    <Callout\r\n      onDismiss={props.onDismiss}\r\n      blurDismiss={props.blurDismiss !== undefined ? props.blurDismiss : true}\r\n      escDismiss={props.escDismiss !== undefined ? props.escDismiss : true}\r\n      lightDismiss={\r\n        props.lightDismiss !== undefined ? props.lightDismiss : true\r\n      }\r\n      anchorElement={props.anchorElement}\r\n      anchorOrigin={\r\n        props.anchorOrigin || {\r\n          horizontal: \"start\",\r\n          vertical: \"start\"\r\n        }\r\n      }\r\n    >\r\n      <PopoverContent onDismiss={props.onDismiss} {...props.contentProps} />\r\n    </Callout>\r\n  );\r\n};\r\n","import { Icon } from \"azure-devops-ui/Icon\";\r\nimport { ListSelection } from \"azure-devops-ui/List\";\r\nimport { ListBox } from \"azure-devops-ui/ListBox\";\r\nimport { SimpleTableCell } from \"azure-devops-ui/Table\";\r\nimport * as React from \"react\";\r\nimport { FilterInput } from \"../Components/FilterInput\";\r\nimport { HoverlayButton } from \"../Components/HoverlayButton\";\r\nimport { Label } from \"../Components/Label\";\r\nimport { Popover } from \"../Components/Popover\";\r\n\r\nlet id = 0;\r\nconst items = [\r\n  { id: id++, text: \"Canberra\" },\r\n  { id: id++, text: \"Belmopan\" },\r\n  { id: id++, text: \"Porto-Novo\" },\r\n  { id: id++, text: \"Sucre\" },\r\n  { id: id++, text: \"Brasília\" },\r\n  { id: id++, text: \"Gitega\" },\r\n  { id: id++, text: \"Yaoundé\" },\r\n  { id: id++, text: \"Ottawa\" },\r\n  { id: id++, text: \"Beijing\" },\r\n  { id: id++, text: \"Yamoussoukro\" },\r\n  { id: id++, text: \"Malabo\" },\r\n  { id: id++, text: \"New Delhi\" },\r\n  { id: id++, text: \"Astana\" },\r\n  { id: id++, text: \"Vaduz\" },\r\n  { id: id++, text: \"Valletta\" }\r\n];\r\n\r\nconst StateValue: React.FC = props => {\r\n  return (\r\n    <div className=\"field-value body-l font-weight-semibold\">\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default () => {\r\n  const [filter, setFilter] = React.useState(\"\");\r\n  const [selectedIdx, setSelectedIdx] = React.useState(0);\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n\r\n  const buttonRef = React.useRef<HTMLDivElement>();\r\n\r\n  return (\r\n    <>\r\n      <HoverlayButton anchorRef={buttonRef} onClick={() => setIsOpen(true)}>\r\n        <Label className=\"body-s\">Some Field</Label>\r\n        <StateValue>{items[selectedIdx].text}</StateValue>\r\n      </HoverlayButton>\r\n      {isOpen && (\r\n        <Popover\r\n          onDismiss={() => setIsOpen(false)}\r\n          anchorElement={buttonRef.current}\r\n          contentProps={{\r\n            selectedIdx,\r\n            onSelect: (idx: number) => {\r\n              setSelectedIdx(idx);\r\n              setIsOpen(false);\r\n            },\r\n            label: \"Some Field\",\r\n            additionalHeaderContent: (\r\n              <div className=\"bolt-dropdown-filter-container bolt-dropdown-filter\">\r\n                <FilterInput filter={filter} setFilter={setFilter} />\r\n              </div>\r\n            ),\r\n            content: (\r\n              <ListBox\r\n                items={\r\n                  items.filter(\r\n                    x =>\r\n                      !filter ||\r\n                      x.text\r\n                        .toLocaleLowerCase()\r\n                        .indexOf(filter.toLocaleLowerCase()) >= 0\r\n                  ) as any\r\n                }\r\n                renderItem={(rowIdx, colIdx, column, item) => {\r\n                  return (\r\n                    <SimpleTableCell\r\n                      className=\"list-item flex-center\"\r\n                      columnIndex={colIdx}\r\n                      tableColumn={column}\r\n                      key={item.id}\r\n                    >\r\n                      <div className=\"list-selection flex-row justify-center flex-center\">\r\n                        {selectedIdx === +item.id && (\r\n                          <Icon iconName=\"CheckMark\" />\r\n                        )}\r\n                      </div>\r\n                      {item.text}\r\n                    </SimpleTableCell>\r\n                  );\r\n                }}\r\n                selection={\r\n                  new ListSelection({\r\n                    selectedRanges: [\r\n                      {\r\n                        beginIndex: selectedIdx,\r\n                        endIndex: selectedIdx\r\n                      }\r\n                    ]\r\n                  })\r\n                }\r\n                onSelect={(_: any, item) => {\r\n                  setSelectedIdx(+item.id);\r\n                  setIsOpen(false);\r\n                }}\r\n              />\r\n            )\r\n          }}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import {\r\n  IIdentity,\r\n  IPeoplePickerProvider,\r\n  IPersonaConnections\r\n} from \"azure-devops-ui/IdentityPicker\";\r\n\r\nexport class IdentityPickerProviderExample implements IPeoplePickerProvider {\r\n  private currentPersonas: IIdentity[] = [];\r\n\r\n  private bosses: IIdentity[] = [\r\n    {\r\n      displayName: \"Harry Smith\",\r\n      entityId: \"Harry Smith\",\r\n      entityType: \"user\",\r\n      mail: \"Harry@microsoft.com\",\r\n      originDirectory: \"aad\",\r\n      originId: \"\"\r\n    }\r\n  ];\r\n\r\n  private personas: IIdentity[] = [\r\n    this.getSampleEntity(\"Julie Runkle\", \"Runkle@microsoft.com\"),\r\n    this.getSampleEntity(\"Aletha Fasano\", \"Fasano@microsoft.com\"),\r\n    this.getSampleEntity(\"Marcell Linville\", \"Linville@microsoft.com\"),\r\n    this.getSampleEntity(\"Birdie Demartino\", \"Demartino@microsoft.com\"),\r\n    this.getSampleEntity(\"Iona Mock\", \"Mock@microsoft.com\"),\r\n    this.getSampleEntity(\"Johnny Frier\", \"Frier@microsoft.com\"),\r\n    this.getSampleEntity(\"Stanford Hunziker\", \"Hunziker@microsoft.com\"),\r\n    this.getSampleEntity(\"Emmitt Heck\", \"Heck@microsoft.com\"),\r\n    this.getSampleEntity(\"Nichol Guerrette\", \"Guerrette@microsoft.com\"),\r\n    this.getSampleEntity(\"Hung Resendez\", \"Resendez@microsoft.com\"),\r\n    this.getSampleEntity(\"Lavinia Ceja\", \"Ceja@microsoft.com\"),\r\n    this.getSampleEntity(\"Antonina Amarante\", \"Amarante@microsoft.com\"),\r\n    this.getSampleEntity(\"Walter Sunday\", \"Sunday@microsoft.com\"),\r\n    this.getSampleEntity(\"Elisa Caylor\", \"Caylor@microsoft.com\"),\r\n    this.getSampleEntity(\"Korey Fredrickson\", \"Fredrickson@microsoft.com\")\r\n  ];\r\n\r\n  private allEmployees: IIdentity[] = this.personas.concat(this.bosses);\r\n\r\n  public onFilterIdentities(filter: string, selectedItems?: IIdentity[]) {\r\n    return this.getPersonaList(filter, selectedItems);\r\n  }\r\n\r\n  public getEntityFromUniqueAttribute = (entityId: string): IIdentity => {\r\n    return this.allEmployees.filter(x => x.entityId === entityId)[0];\r\n  };\r\n\r\n  public onRequestConnectionInformation = (\r\n    entity: IIdentity,\r\n    getDirectReports?: boolean\r\n  ): IPersonaConnections => {\r\n    return entity.entityId === \"Julie Runkle\"\r\n      ? {\r\n          directReports: getDirectReports ? this.personas : undefined,\r\n          managers: []\r\n        }\r\n      : {\r\n          directReports: getDirectReports ? [] : undefined,\r\n          managers: this.bosses\r\n        };\r\n  };\r\n\r\n  public onEmptyInputFocus(): IIdentity[] {\r\n    return [\r\n      this.getSampleEntity(\"Julie Runkle\", \"Runkle@microsoft.com\"),\r\n      this.getSampleEntity(\"Aletha Fasano\", \"Fasano@microsoft.com\"),\r\n      this.getSampleEntity(\"Marcell Linville\", \"Linville@microsoft.com\")\r\n    ];\r\n  }\r\n\r\n  private getSampleEntity(displayName: string, mail: string): IIdentity {\r\n    return {\r\n      displayName,\r\n      entityId: displayName,\r\n      entityType: \"user\",\r\n      mail,\r\n      originDirectory: \"aad\",\r\n      originId: \"\",\r\n      physicalDeliveryOfficeName: \"123 Seasame Street\",\r\n      telephoneNumber: \"555-5555\"\r\n    } as IIdentity;\r\n  }\r\n\r\n  // Simulate initial request delay when the user first tries to grab a list\r\n  private getPersonaList(\r\n    filter: string,\r\n    selectedItems?: IIdentity[]\r\n  ): Promise<IIdentity[]> | IIdentity[] {\r\n    if (this.currentPersonas.length > 0) {\r\n      return this.filterList(filter, selectedItems);\r\n    } else {\r\n      return new Promise<IIdentity[]>((resolve, reject) =>\r\n        setTimeout(() => {\r\n          this.currentPersonas = this.personas;\r\n          resolve(this.filterList(filter, selectedItems));\r\n        }, 800)\r\n      );\r\n    }\r\n  }\r\n\r\n  private filterList(filter: string, selectedItems?: IIdentity[]) {\r\n    if (filter === \"\") {\r\n      return [];\r\n    }\r\n    return this.currentPersonas.filter(\r\n      x =>\r\n        (selectedItems === undefined || selectedItems.indexOf(x) === -1) &&\r\n        ((x.displayName &&\r\n          x.displayName.toLowerCase().indexOf(filter.toLowerCase()) !== -1) ||\r\n          (x.mail && x.mail.toLowerCase().indexOf(filter.toLowerCase()) !== -1))\r\n    );\r\n  }\r\n}\r\n","import { ObservableArray } from \"azure-devops-ui/Core/Observable\";\r\nimport { IdentityPicker, IIdentity } from \"azure-devops-ui/IdentityPicker\";\r\nimport * as React from \"react\";\r\nimport { HoverlayButton } from \"../Components/HoverlayButton\";\r\nimport { Label } from \"../Components/Label\";\r\nimport { Popover } from \"../Components/Popover\";\r\nimport \"./identity.scss\";\r\nimport { IdentityPickerProviderExample } from \"./IdentityPickerData\";\r\n\r\nconst StateValue: React.FC = props => {\r\n  return (\r\n    <div className=\"field-value body-l font-weight-semibold\">\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default () => {\r\n  const [selectedIdx, setSelectedIdx] = React.useState(0);\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n  const buttonRef = React.useRef<HTMLButtonElement>();\r\n\r\n  const pickerProvider = new IdentityPickerProviderExample();\r\n  const selectedIdentities = new ObservableArray<IIdentity>([]);\r\n\r\n  const onIdentitiesRemoved = (identities: IIdentity[]) => {\r\n    selectedIdentities.value = selectedIdentities.value.filter(\r\n      (entity: IIdentity) =>\r\n        identities.filter(item => item.entityId === entity.entityId).length ===\r\n        0\r\n    );\r\n  };\r\n\r\n  const onIdentityAdded = (identity: IIdentity) => {\r\n    selectedIdentities.push(identity);\r\n  };\r\n\r\n  const onIdentityRemoved = (identity: IIdentity) => {\r\n    selectedIdentities.value = selectedIdentities.value.filter(\r\n      (entity: IIdentity) => entity.entityId !== identity.entityId\r\n    );\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (isOpen) {\r\n      // Don't try this at home, remember, we're trained professionals here\r\n      setTimeout(() => {\r\n        const input = document.querySelector(\r\n          \".bolt-tag-picker-input\"\r\n        )! as HTMLInputElement;\r\n        input && input.focus();\r\n      }, 0);\r\n    }\r\n  }, [isOpen]);\r\n\r\n  return (\r\n    <>\r\n      <HoverlayButton anchorRef={buttonRef} onClick={() => setIsOpen(true)}>\r\n        <Label>Assigned To</Label>\r\n        <StateValue>Kat Larsson</StateValue>\r\n      </HoverlayButton>\r\n      {isOpen && (\r\n        <Popover\r\n          blurDismiss={false}\r\n          onDismiss={() => setIsOpen(false)}\r\n          anchorElement={buttonRef.current}\r\n          contentProps={{\r\n            selectedIdx,\r\n            onSelect: (idx: number) => {\r\n              setSelectedIdx(idx);\r\n              setIsOpen(false);\r\n            },\r\n            label: \"Assigned To\",\r\n            content: (\r\n              <div className=\"identity-popover\">\r\n                <IdentityPicker\r\n                  onIdentitiesRemoved={onIdentitiesRemoved}\r\n                  onIdentityAdded={onIdentityAdded}\r\n                  onIdentityRemoved={onIdentityRemoved}\r\n                  pickerProvider={pickerProvider}\r\n                  selectedIdentities={selectedIdentities}\r\n                />\r\n              </div>\r\n            )\r\n          }}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import { Button } from \"azure-devops-ui/Button\";\r\nimport { TextField } from \"azure-devops-ui/TextField\";\r\nimport * as React from \"react\";\r\nimport { HoverlayButton } from \"../Components/HoverlayButton\";\r\nimport { Label } from \"../Components/Label\";\r\nimport { Popover } from \"../Components/Popover\";\r\n\r\nconst StateValue: React.FC = props => {\r\n  return (\r\n    <div className=\"field-value body-l font-weight-semibold\">\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default () => {\r\n  const [value, setValue] = React.useState(42);\r\n  const [tempValue, setTempValue] = React.useState(value);\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n\r\n  const buttonRef = React.useRef<HTMLButtonElement>();\r\n\r\n  const close = () => setIsOpen(false);\r\n\r\n  return (\r\n    <>\r\n      <HoverlayButton\r\n        anchorRef={buttonRef}\r\n        onClick={() => {\r\n          setTempValue(value);\r\n          setIsOpen(true);\r\n        }}\r\n      >\r\n        <Label className=\"body-s\">Estimate</Label>\r\n        <StateValue>{value}</StateValue>\r\n      </HoverlayButton>\r\n      {isOpen && (\r\n        <Popover\r\n          lightDismiss={value === tempValue}\r\n          blurDismiss={false}\r\n          onDismiss={() => setIsOpen(false)}\r\n          anchorElement={buttonRef.current}\r\n          contentProps={{\r\n            label: \"Estimate\",\r\n            hideClose: true,\r\n            content: (\r\n              <>\r\n                <div className=\"textfield-wrapper\">\r\n                  <TextField\r\n                    inputType={\"number\" as any}\r\n                    autoFocus={true}\r\n                    value={tempValue as any}\r\n                    onChange={(_, value) => setTempValue(+value)}\r\n                  />\r\n                </div>\r\n                <div className=\"popover-buttons flex-row justify-end\">\r\n                  <Button onClick={close}>Cancel</Button>\r\n                  <Button\r\n                    disabled={value === tempValue}\r\n                    onClick={() => {\r\n                      setValue(tempValue);\r\n                      close();\r\n                    }}\r\n                    primary\r\n                  >\r\n                    Save\r\n                  </Button>\r\n                </div>\r\n              </>\r\n            )\r\n          }}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import { Button } from \"azure-devops-ui/Button\";\r\nimport { Card, CardContent } from \"azure-devops-ui/Card\";\r\nimport { TextField } from \"azure-devops-ui/TextField\";\r\nimport * as React from \"react\";\r\n\r\nexport default () => {\r\n  const [editable, setEditable] = React.useState(false);\r\n  const [\r\n    value,\r\n    setValue\r\n  ] = React.useState(`They had a house of crystal pillars</h3>\r\n\r\n              On the planet Mars by the edge of an empty sea, and every morning\r\n              you could see Mrs. K eating the golden fruits that grew from the\r\n              crystal walls, or cleaning the house with handfuls of magnetic\r\n              dust which, taking all dirt with it, blew away on the hot wind.\r\n              Afternoons, when the fossil sea was warm and motionless, and the\r\n              wine trees stood stiff in the yard, and the little distant Martian\r\n              bone town was all enclosed, and no one drifted out their doors,\r\n              you could see Mr. K himself in his room, reading from a metal book\r\n              with raised hieroglyphs over which he brushed his hand, as one\r\n              might play a harp.`);\r\n\r\n  return (\r\n    <Card\r\n      headerDescriptionProps={{\r\n        text: \"Description\",\r\n        className: \"body-l font-weight-semibold\"\r\n      }}\r\n      headerCommandBarItems={\r\n        (!editable && [\r\n          {\r\n            important: true,\r\n            subtle: true,\r\n            id: \"edit\",\r\n            iconProps: {\r\n              iconName: \"Edit\"\r\n            },\r\n            onActivate: () => {\r\n              setEditable(true);\r\n            }\r\n          }\r\n        ]) ||\r\n        undefined\r\n      }\r\n    >\r\n      <CardContent contentPadding={false}>\r\n        {!editable && (\r\n          <div\r\n            className=\"flex-column\"\r\n            dangerouslySetInnerHTML={{ __html: value }}\r\n          />\r\n        )}\r\n        {editable && (\r\n          <div className=\"flex-column\">\r\n            <TextField\r\n              multiline\r\n              autoAdjustHeight\r\n              value={value}\r\n              onChange={(_, value) => {\r\n                setValue(value);\r\n              }}\r\n            />\r\n            <div className=\"flex-row\">\r\n              <div className=\"popover-buttons flex-row justify-end\">\r\n                <Button\r\n                  onClick={() => {\r\n                    setEditable(false);\r\n                  }}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  // disabled={value === tempValue}\r\n                  onClick={() => {\r\n                    // setValue(tempValue);\r\n                    setEditable(false);\r\n                  }}\r\n                  primary\r\n                >\r\n                  Save\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n","import { Status, Statuses } from \"azure-devops-ui/Status\";\r\nimport * as React from \"react\";\r\n\r\nconst StateIcon: React.FC<{ state: string }> = props => {\r\n  switch (props.state) {\r\n    case \"To Do\":\r\n      return <Status {...Statuses.Queued} size={\"16\" as any} />;\r\n\r\n    case \"Doing\":\r\n      return <Status {...Statuses.Waiting} size={\"16\" as any} />;\r\n\r\n    case \"Done\":\r\n      return <Status {...Statuses.Success} size={\"16\" as any} />;\r\n\r\n    default:\r\n      return <div style={{ marginLeft: -4 }} />;\r\n  }\r\n};\r\n\r\nexport const State: React.FC<{ state: string }> = props => {\r\n  return (\r\n    <div className=\"flex-row flex-center\">\r\n      <StateIcon state={props.state} />\r\n      <div style={{ marginLeft: 8 }}>{props.state}</div>\r\n    </div>\r\n  );\r\n};\r\n","import { Icon } from \"azure-devops-ui/Icon\";\r\nimport { ListSelection } from \"azure-devops-ui/List\";\r\nimport { ListBox } from \"azure-devops-ui/ListBox\";\r\nimport { SimpleTableCell } from \"azure-devops-ui/Table\";\r\nimport * as React from \"react\";\r\nimport { HoverlayButton } from \"../Components/HoverlayButton\";\r\nimport { Label } from \"../Components/Label\";\r\nimport { Popover } from \"../Components/Popover\";\r\nimport { State } from \"../Components/State\";\r\n\r\nconst items = [\r\n  { id: \"0\", text: \"To Do\" },\r\n  { id: \"1\", text: \"Doing\" },\r\n  { id: \"2\", text: \"Done\" }\r\n];\r\n\r\nconst StateValue: React.FC = props => {\r\n  return (\r\n    <div className=\"field-value body-l font-weight-semibold\">\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default () => {\r\n  const [filter] = React.useState(\"\");\r\n  const [selectedIdx, setSelectedIdx] = React.useState(1);\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n\r\n  const buttonRef = React.useRef<HTMLDivElement>();\r\n\r\n  return (\r\n    <>\r\n      <HoverlayButton anchorRef={buttonRef} onClick={() => setIsOpen(true)}>\r\n        <Label className=\"body-s\">State</Label>\r\n        <StateValue>\r\n          <State state={items[selectedIdx].text} />\r\n        </StateValue>\r\n      </HoverlayButton>\r\n      {isOpen && (\r\n        <Popover\r\n          onDismiss={() => setIsOpen(false)}\r\n          anchorElement={buttonRef.current}\r\n          contentProps={{\r\n            selectedIdx,\r\n            onSelect: (idx: number) => {\r\n              setSelectedIdx(idx);\r\n              setIsOpen(false);\r\n            },\r\n            label: \"State\",\r\n            content: (\r\n              <ListBox\r\n                items={\r\n                  items.filter(\r\n                    x =>\r\n                      !filter ||\r\n                      x.text\r\n                        .toLocaleLowerCase()\r\n                        .indexOf(filter.toLocaleLowerCase()) >= 0\r\n                  ) as any\r\n                }\r\n                renderItem={(rowIdx, colIdx, column, item) => {\r\n                  return (\r\n                    <SimpleTableCell\r\n                      className=\"list-item flex-center\"\r\n                      columnIndex={colIdx}\r\n                      tableColumn={column}\r\n                    >\r\n                      <div className=\"list-selection flex-row justify-center flex-center\">\r\n                        {selectedIdx === +item.id && (\r\n                          <Icon iconName=\"CheckMark\" />\r\n                        )}\r\n                      </div>\r\n                      <State state={item.text!}>{item.text}</State>\r\n                    </SimpleTableCell>\r\n                  );\r\n                }}\r\n                selection={\r\n                  new ListSelection({\r\n                    selectedRanges: [\r\n                      {\r\n                        beginIndex: selectedIdx,\r\n                        endIndex: selectedIdx\r\n                      }\r\n                    ]\r\n                  })\r\n                }\r\n                onSelect={(_: any, item) => {\r\n                  setSelectedIdx(+item.id);\r\n                  setIsOpen(false);\r\n                }}\r\n              />\r\n            )\r\n          }}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import { ObservableArray } from \"azure-devops-ui/Core/Observable\";\r\nimport { ILabelModel } from \"azure-devops-ui/Label\";\r\n\r\nexport const getSuggestions = (context: string) => {\r\n  const items: ILabelModel[] = [\r\n    {\r\n      color: {\r\n        blue: 0,\r\n        green: 255,\r\n        red: 0\r\n      },\r\n      content: \"Bug Bash 0.17\"\r\n    },\r\n    {\r\n      color: {\r\n        blue: 0,\r\n        green: 0,\r\n        red: 255\r\n      },\r\n      content: \"Bug Bash 0.28\"\r\n    },\r\n    {\r\n      color: {\r\n        blue: 255,\r\n        green: 0,\r\n        red: 0\r\n      },\r\n      content: \"Accessibility\"\r\n    }\r\n  ];\r\n\r\n  return items.filter(\r\n    x => x.content.toLowerCase().indexOf(context.toLowerCase()) === 0\r\n  );\r\n};\r\n\r\nexport const getSuggestionsAsync = (context: string) => {\r\n  return new Promise<ILabelModel[]>(resolve => {\r\n    setTimeout(() => resolve(getSuggestions(context)), 2000);\r\n  });\r\n};\r\n\r\nexport const labelProps: ObservableArray<ILabelModel> = new ObservableArray<\r\n  ILabelModel\r\n>([\r\n  {\r\n    content: \"Label Content\"\r\n  },\r\n  {\r\n    content: \"Lorem ipsum dolor sit amet consectetur\"\r\n  },\r\n  {\r\n    color: {\r\n      blue: 0,\r\n      green: 255,\r\n      red: 0\r\n    },\r\n    content: \"Custom color!\"\r\n  },\r\n  {\r\n    color: {\r\n      blue: 0,\r\n      green: 0,\r\n      red: 0\r\n    },\r\n    content: \"Dark invert text\"\r\n  },\r\n  {\r\n    color: {\r\n      blue: 128,\r\n      green: 50,\r\n      red: 50\r\n    },\r\n    content: \"Less dark invert\"\r\n  }\r\n]);\r\n","import { EditableLabelGroup, ILabelModel } from \"azure-devops-ui/Label\";\r\nimport * as React from \"react\";\r\nimport { getSuggestions, labelProps } from \"./LabelData\";\r\n\r\nexport class EditableLabelGroupFreeFlow extends React.Component<{}> {\r\n  private ref: React.RefObject<EditableLabelGroup> = React.createRef<\r\n    EditableLabelGroup\r\n  >();\r\n\r\n  public render() {\r\n    return (\r\n      <EditableLabelGroup\r\n        ref={this.ref}\r\n        labelProps={labelProps}\r\n        wrappingBehavior={/* WrappingBehavior.freeFlow */ 0}\r\n        getSuggestedLabels={getSuggestions}\r\n        onLabelSubmit={this.onLabelSubmit}\r\n        onLabelRemove={this.onLabelRemove}\r\n      />\r\n    );\r\n  }\r\n\r\n  private onLabelSubmit = (model: ILabelModel) => {\r\n    labelProps.push(model);\r\n  };\r\n\r\n  private onLabelRemove = (model: ILabelModel) => {\r\n    labelProps.removeAll(\r\n      (item: ILabelModel) =>\r\n        item.content.toUpperCase() === model.content.toUpperCase()\r\n    );\r\n  };\r\n\r\n  public componentDidMount() {\r\n    this.ref.current!.focus();\r\n  }\r\n}\r\n","import { LabelGroup } from \"azure-devops-ui/Label\";\r\nimport * as React from \"react\";\r\nimport { HoverlayButton } from \"../Components/HoverlayButton\";\r\nimport { Label } from \"../Components/Label\";\r\nimport { Popover } from \"../Components/Popover\";\r\nimport { labelProps } from \"../Labels/LabelData\";\r\nimport { EditableLabelGroupFreeFlow } from \"../Labels/LabelPicker\";\r\n\r\nexport default () => {\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n\r\n  const buttonRef = React.useRef<HTMLButtonElement>();\r\n\r\n  return (\r\n    <>\r\n      <HoverlayButton anchorRef={buttonRef} onClick={() => setIsOpen(true)}>\r\n        <Label className=\"body-s\">Tags</Label>\r\n        <LabelGroup labelProps={labelProps} wrappingBehavior={0} />\r\n      </HoverlayButton>\r\n      {isOpen && (\r\n        <Popover\r\n          blurDismiss={false}\r\n          onDismiss={() => setIsOpen(false)}\r\n          anchorElement={buttonRef.current}\r\n          contentProps={{\r\n            label: \"Tags\",\r\n            content: (\r\n              <div className=\"tags\">\r\n                <EditableLabelGroupFreeFlow />\r\n              </div>\r\n            )\r\n          }}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import { Button } from \"azure-devops-ui/Button\";\r\nimport { TextField } from \"azure-devops-ui/TextField\";\r\nimport * as React from \"react\";\r\nimport { HoverlayButton } from \"../Components/HoverlayButton\";\r\nimport { Label } from \"../Components/Label\";\r\nimport { Popover } from \"../Components/Popover\";\r\n\r\nconst StateValue: React.FC = props => {\r\n  return (\r\n    <div className=\"field-value body-l font-weight-semibold\">\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst InputLimit = 20;\r\n\r\nexport default () => {\r\n  const [value, setValue] = React.useState(\"Konfabulator\");\r\n  const [tempValue, setTempValue] = React.useState(value);\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n\r\n  const buttonRef = React.useRef<HTMLButtonElement>();\r\n\r\n  const close = () => setIsOpen(false);\r\n\r\n  return (\r\n    <>\r\n      <HoverlayButton\r\n        anchorRef={buttonRef}\r\n        onClick={() => {\r\n          setTempValue(value);\r\n          setIsOpen(true);\r\n        }}\r\n      >\r\n        <Label className=\"body-s\">Milestone</Label>\r\n        <StateValue>{value}</StateValue>\r\n      </HoverlayButton>\r\n      {isOpen && (\r\n        <Popover\r\n          lightDismiss={value === tempValue}\r\n          blurDismiss={false}\r\n          onDismiss={() => setIsOpen(false)}\r\n          anchorElement={buttonRef.current}\r\n          contentProps={{\r\n            label: \"Milestone\",\r\n            hideClose: true,\r\n            content: (\r\n              <>\r\n                <div className=\"textfield-wrapper\">\r\n                  <TextField\r\n                    autoFocus={true}\r\n                    value={tempValue}\r\n                    onChange={(_, value) =>\r\n                      value.length <= InputLimit && setTempValue(value)\r\n                    }\r\n                  />\r\n                  {tempValue.length >= 15 && (\r\n                    <div className=\"flex-row justify-end\">\r\n                      {tempValue.length}/{InputLimit}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className=\"popover-buttons flex-row justify-end\">\r\n                  <Button onClick={close}>Cancel</Button>\r\n                  <Button\r\n                    disabled={value === tempValue}\r\n                    onClick={() => {\r\n                      setValue(tempValue);\r\n                      close();\r\n                    }}\r\n                    primary\r\n                  >\r\n                    Save\r\n                  </Button>\r\n                </div>\r\n              </>\r\n            )\r\n          }}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import { ObservableValue } from \"azure-devops-ui/Core/Observable\";\r\nimport { Toggle } from \"azure-devops-ui/Toggle\";\r\nimport * as React from \"react\";\r\nimport { HoverlayButton } from \"../Components/HoverlayButton\";\r\nimport { Label } from \"../Components/Label\";\r\n\r\nexport default () => {\r\n  const toggleValue = new ObservableValue<boolean>(false);\r\n\r\n  const content = (\r\n    <>\r\n      <Label>Release Notes Required</Label>\r\n      <div className=\"field-value body-l font-weight-semibold\">\r\n        <Toggle\r\n          offText={\"Off\"}\r\n          onText={\"On\"}\r\n          checked={toggleValue}\r\n          onChange={event => {\r\n            toggleValue.value = !toggleValue.value;\r\n            event.preventDefault();\r\n          }}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n\r\n  return <HoverlayButton>{content}</HoverlayButton>;\r\n};\r\n","import * as React from \"react\";\r\n\r\nexport const IssueIcon: React.FC<{ typeName: string }> = ({ typeName }) => {\r\n  return (\r\n    <img\r\n      width=\"16\"\r\n      height=\"16\"\r\n      src=\"https://tfsprodwcus0.visualstudio.com/_apis/wit/workItemIcons/icon_insect?color=CC293D&v=2\"\r\n      alt={typeName}\r\n    />\r\n  );\r\n};\r\n","import * as React from \"react\";\r\nimport { css } from \"azure-devops-ui/Util\";\r\nimport \"./WorkItemId.scss\";\r\nimport { IssueIcon } from \"../IssueIcon\";\r\n\r\nexport interface IWorkItemIdProps {\r\n  /** Optional class name to apply to the component */\r\n  className?: string;\r\n\r\n  /** Work item id to display. Optional if you only want to display the work item type icon/name */\r\n  workItemId?: number;\r\n\r\n  workItemType: string;\r\n}\r\n\r\nexport const WorkItemId: React.FC<IWorkItemIdProps> = props => {\r\n  const { className, workItemId, workItemType } = props;\r\n\r\n  return (\r\n    <div\r\n      className={css(\r\n        className,\r\n        \"work-item-id-container\",\r\n        \"flex-center\",\r\n        \"flex-row\",\r\n        \"flex-shrink\",\r\n        \"body-l\"\r\n      )}\r\n    >\r\n      <IssueIcon typeName={workItemType} />\r\n\r\n      {workItemId !== undefined && (\r\n        <span className=\"work-item-id\">#{workItemId}</span>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import * as React from \"react\";\r\nimport { WorkItemId } from \"./Header/WorkItemId\";\r\n\r\nexport const WorkItemHeader: React.FC<{ id: number; title: string }> = ({\r\n  id,\r\n  title\r\n}) => {\r\n  return (\r\n    <div className=\"flex-column\">\r\n      <div className=\"title-m\">{title}</div>\r\n      <WorkItemId\r\n        className=\"flex-self-start\"\r\n        workItemId={id}\r\n        workItemType=\"Bug\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import * as React from \"react\";\r\nimport \"./Divider.scss\";\r\n\r\nexport const Divider = () => <div className=\"divider\" />;\r\n","import * as React from \"react\";\r\nimport \"./Identity.scss\";\r\nimport { Persona, IIdentity } from \"azure-devops-ui/Persona\";\r\n\r\nexport const Identity: React.FC<{\r\n  image?: string;\r\n  name: string;\r\n  size: number;\r\n}> = ({ image, name, size }) => {\r\n  const imageUrl = image || determineImage(name);\r\n\r\n  return (\r\n    <div className=\"identity inline-flex-row flex-center\">\r\n      <Persona\r\n        className=\"identity-image\"\r\n        size={size}\r\n        identity={\r\n          {\r\n            entityId: name,\r\n            entityType: \"\",\r\n            originDirectory: \"aad\",\r\n            originId: name,\r\n            imageUrl: imageUrl\r\n          } as IIdentity\r\n        }\r\n      />\r\n      <div className=\"font-weight-semibold\">{name}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction determineImage(name: string): string | undefined {\r\n  if (name.indexOf(\"Kat\") !== -1) {\r\n    return \"identities/kat.png\";\r\n  }\r\n\r\n  if (name.indexOf(\"Celeste\") !== -1) {\r\n    return \"identities/celeste.png\";\r\n  }\r\n\r\n  if (name.indexOf(\"Lydia\") !== -1) {\r\n    return \"identities/lydia.png\";\r\n  }\r\n\r\n  if (name.indexOf(\"Christopher\") !== -1) {\r\n    return \"identities/christopher.png\";\r\n  }\r\n}\r\n","import { Ago } from \"azure-devops-ui/Ago\";\r\nimport { Button } from \"azure-devops-ui/Button\";\r\nimport * as React from \"react\";\r\nimport \"./Timeline.scss\";\r\n\r\nexport const Timeline: React.FC = props => (\r\n  <div className=\"timeline\">\r\n    <div className=\"timeline-line\" />\r\n    {props.children}\r\n  </div>\r\n);\r\n\r\n///\r\n\r\nexport const TimelineSmallIcon: React.FC = props => {\r\n  return (\r\n    <div className=\"timeline-icon-small flex-row flex-center justify-center\">\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\n///\r\n\r\nexport interface ITimelineEntryProps {\r\n  renderIcon: () => JSX.Element;\r\n}\r\n\r\nexport const TimelineEntry: React.FC<ITimelineEntryProps> = props => {\r\n  return (\r\n    <div className=\"timeline-entry flex-row flex-center\">\r\n      <div className=\"timeline-entry-icon flex-row flex-center justify-center\">\r\n        {props.renderIcon()}\r\n      </div>\r\n      <div className=\"timeline-entry-content flex-row flex-center\">\r\n        {props.children}\r\n      </div>\r\n      <div className=\"timeline-entry-timestamp\">\r\n        <Ago format={0} date={new Date()} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const TimelineShowMore: React.FC = () => {\r\n  return (\r\n    <div className=\"timeline-show-more flex-row flex-center justify-center\">\r\n      <div className=\"timeline-show-more-line flex-row flex-center justify-center\">\r\n        <Button className=\"timeline-show-more-button flex-row flex-center justify-center\">\r\n          Show 32 more\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { Icon } from \"azure-devops-ui/Icon\";\r\nimport * as React from \"react\";\r\nimport { Identity } from \"../Identity\";\r\nimport { IssueIcon } from \"../IssueIcon\";\r\nimport {\r\n  Timeline,\r\n  TimelineEntry,\r\n  TimelineShowMore,\r\n  TimelineSmallIcon\r\n} from \"../Timeline/Timeline\";\r\n\r\nexport const ActivityFeedEntryCreation: React.FC = () => {\r\n  return (\r\n    <TimelineEntry\r\n      renderIcon={() => (\r\n        <TimelineSmallIcon>\r\n          <Icon iconName=\"WorkItem\" />\r\n        </TimelineSmallIcon>\r\n      )}\r\n    >\r\n      <IssueIcon typeName=\"Bug\" />\r\n      &nbsp;<b>Bug #42</b>&nbsp;created by{\" \"}\r\n      <Identity size={20} name=\"Christopher Schleiden\" />\r\n    </TimelineEntry>\r\n  );\r\n};\r\n\r\nexport const ActivityFeedAssignedTo: React.FC = () => {\r\n  return (\r\n    <TimelineEntry\r\n      renderIcon={() => (\r\n        <TimelineSmallIcon>\r\n          <Icon iconName=\"Contact\" />\r\n        </TimelineSmallIcon>\r\n      )}\r\n    >\r\n      Assigned to <Identity size={20} name=\"Celeste Burton\" /> by{\" \"}\r\n      <Identity size={20} name=\"Christopher Schleiden\" />\r\n    </TimelineEntry>\r\n  );\r\n};\r\n\r\nexport const ActivityFeed: React.FC = () => {\r\n  return (\r\n    <Timeline>\r\n      <ActivityFeedEntryCreation />\r\n      <TimelineShowMore />\r\n      <ActivityFeedAssignedTo />\r\n    </Timeline>\r\n  );\r\n};\r\n","import { FocusGroup } from \"azure-devops-ui/FocusGroup\";\r\nimport { SurfaceContext } from \"azure-devops-ui/Surface\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport AllowedValues from \"./Fields/allowedValues\";\r\nimport Identity from \"./Fields/identity\";\r\nimport Integer from \"./Fields/integer\";\r\nimport LongText from \"./Fields/longText\";\r\nimport State from \"./Fields/state\";\r\nimport Tags from \"./Fields/tags\";\r\nimport TextField from \"./Fields/textField\";\r\nimport Toggle from \"./Fields/toggle\";\r\nimport \"./style.scss\";\r\nimport { WorkItemHeader } from \"./Components/Header\";\r\nimport { Divider } from \"./Components/Divider\";\r\nimport { ActivityFeed } from \"./Components/ActivityFeed/ActivityFeed\";\r\n\r\nconst Content = () => {\r\n  return (\r\n    <SurfaceContext.Provider\r\n      value={{ background: /* SurfaceBackground.neutral */ 1 }}\r\n    >\r\n      <div className=\"flex-column\">\r\n        <WorkItemHeader\r\n          id={42}\r\n          title=\"Something doesn't work with this application\"\r\n        />\r\n      </div>\r\n      <div className=\"content flex-row\">\r\n        <div className=\"flex-column main-content flex-stretch\">\r\n          <LongText />\r\n          <Divider />\r\n          <ActivityFeed />\r\n        </div>\r\n        <div>\r\n          <FocusGroup>\r\n            <State />\r\n            <Identity />\r\n            <AllowedValues />\r\n            <AllowedValues />\r\n            <TextField />\r\n            <Integer />\r\n            <AllowedValues />\r\n            <Toggle />\r\n            <AllowedValues />\r\n            <Tags />\r\n          </FocusGroup>\r\n        </div>\r\n      </div>\r\n    </SurfaceContext.Provider>\r\n  );\r\n};\r\n\r\nconst App: React.FC = () => <Content />;\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}